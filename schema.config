platform: group {
    port {
        description: "Front panel ports collection"
        max: 64
        @item {
            pattern-name: "^ge-(6[5-6])|ge-(6[0-6]|5[0-9]|4[0-9]|3[0-9]|2[0-9]|1[0-9]|[1-9])$"
            breakout-mode: leaf {
                type: string
                pattern-value: "(none)|(4x100G)"
                default: none
            }
        }
    }
}
interface: group {
    description: "Interface configuration"
    aggregate-ethernet: container {
        description: "Aggregated Ethernet interfaces collection"
        max: 64
        @item {
            pattern-name: "^ae-(6[5-6])|ae-(6[0-6]|5[0-9]|4[0-9]|3[0-9]|2[0-9]|1[0-9]|[1-9])$"
            members: array {
                max: 64
                @item {
                    ref: "/interface/gigabit-ethernet/@item"
                }
                update-depend: /interface/gigabit-ethernet/@item
            }
        }
    }
    gigabit-ethernet: container {
        description: "Gigabit Ethernet interfaces collection"
        max: 64
        @item {
            pattern-name: "^ge-(6[5-6])|ge-(6[0-6]|5[0-9]|4[0-9]|3[0-9]|2[0-9]|1[0-9]|[1-9])(\/[1-4])?$"
            speed: leaf {
                type: number
                pattern-value: "(100G|400G)"
                default: 400G
                update-constraint: "#if #regex_match<#xpath<@key>, #regex<^ge-(6[5-6])|ge-(6[0-6]|5[0-9]|4[0-9]|3[0-9]|2[0-9]|1[0-9]|[1-9])$>> #equal #bool<true> #then #must<#xpath</platform/port[@key]/breakout-mode> #equal #string<none>>"
                update-constraint: "#if #exists</platform/port[@key]> #equal #bool<false> #then #must<@value, 100G>>"
            }

            update-depend: /platform/port/@item
            update-constraint: "#if #regex_match<#xpath<@key>, #regex<^ge-(6[5-6])|ge-(6[0-6]|5[0-9]|4[0-9]|3[0-9]|2[0-9]|1[0-9]|[1-9])$>> #equal #bool<true> #then #must<#xpath</platform/port[@key]/breakout-mode> #equal #string<none>>"
            update-constraint: "#if #regex_match<#xpath<@key>, #regex<^ge-(6[5-6])|ge-(6[0-6]|5[0-9]|4[0-9]|3[0-9]|2[0-9]|1[0-9]|[1-9])(\/[1-4])$>> #equal #bool<true> #then #must<#xpath</platform/port[@key]/breakout-mode> #not_equal #string<none>>"
        }
    }
}
vlan: group {
    max: 4096
    id: container {
        description: "VLANs collection"
        @item {
            pattern-name: "^(409[0-6]|(40[0-8]|[1-3]\d\d|[1-9]\d|[1-9])\d|[1-9])$"
            members: group {
                tagged: container {
                    @item {
                        pattern-name: "^ge-(6[5-6])|ge-(6[0-6]|5[0-9]|4[0-9]|3[0-9]|2[0-9]|1[0-9]|[1-9])(\/[1-4])?$"
                        ref: /interface/gigabit-ethernet/@item
                        update-constraint: "#must #exists<@value, /vlan/id[@key]/members/untagged/value> #equal #bool<false>"
                    }
                }
                untagged: container {
                    @item {
                        pattern-name: "^ge-(6[5-6])|ge-(6[0-6]|5[0-9]|4[0-9]|3[0-9]|2[0-9]|1[0-9]|[1-9])(\/[1-4])?$"
                        ref: /interface/gigabit-ethernet/@item
                        update-constraint: "#must #exists<@value, /vlan/id[@key]/members/tagged/value> #equal #bool<false>"
                    }
                }
                native: container {
                    @item {
                        pattern-name: "^ge-(6[5-6])|ge-(6[0-6]|5[0-9]|4[0-9]|3[0-9]|2[0-9]|1[0-9]|[1-9])(\/[1-4])?$"
                        ref: /interface/gigabit-ethernet/@item
                    }
                }
            }
            update-depend: /interface/gigabit-ethernet
        }
    }
}